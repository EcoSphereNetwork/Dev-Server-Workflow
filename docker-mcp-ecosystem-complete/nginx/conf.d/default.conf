# Allgemeine Sicherheitseinstellungen
server_tokens off;

# SSL-Einstellungen
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers on;
ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:10m;
ssl_session_tickets off;

# HSTS-Einstellungen
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
add_header X-Content-Type-Options nosniff;
add_header X-Frame-Options SAMEORIGIN;
add_header X-XSS-Protection "1; mode=block";
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; img-src 'self' data:; style-src 'self' 'unsafe-inline'; font-src 'self'; connect-src 'self'";

# Proxy-Einstellungen
proxy_http_version 1.1;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection "upgrade";
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_buffering off;
proxy_request_buffering off;
proxy_read_timeout 300;
proxy_connect_timeout 300;
proxy_send_timeout 300;

# OpenProject
server {
    listen 80;
    server_name openproject.eocspherenet.work;

    location / {
        proxy_pass http://openproject:8080;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://openproject:8080/health_checks/default;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# GitLab
server {
    listen 80;
    server_name gitlab.ecospherenet.work;

    client_max_body_size 500m;

    location / {
        proxy_pass http://gitlab:80;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://gitlab:80/-/health;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# AppFlowy
server {
    listen 80;
    server_name appflowy.ecospherenet.work;

    location / {
        proxy_pass http://appflowy:3000;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://appflowy:3000/health;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# n8n
server {
    listen 80;
    server_name n8n.ecospherenet.work;

    location / {
        proxy_pass http://n8n:5678;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://n8n:5678/healthz;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# OpenHands
server {
    listen 80;
    server_name openhands.ecospherenet.work;

    location / {
        proxy_pass http://openhands:8080;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://openhands:8080/health;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# MCP Server Proxy
server {
    listen 80;
    server_name mcp.ecospherenet.work;

    # GitHub MCP Server
    location /github/ {
        proxy_pass http://github-mcp:3001/;
    }

    # GitHub Chat MCP Server
    location /github-chat/ {
        proxy_pass http://github-chat-mcp:3002/;
    }

    # GitLab MCP Server
    location /gitlab/ {
        proxy_pass http://gitlab-mcp:3003/;
    }

    # Memory MCP Server
    location /memory/ {
        proxy_pass http://memory-mcp:3004/;
    }

    # Basic Memory MCP Server
    location /basic-memory/ {
        proxy_pass http://basic-memory-mcp:3005/;
    }

    # Time MCP Server
    location /time/ {
        proxy_pass http://time-mcp:3006/;
    }

    # Wolfram Alpha MCP Server
    location /wolfram-alpha/ {
        proxy_pass http://wolfram-alpha-mcp:3007/;
    }

    # Discord MCP Server
    location /discord/ {
        proxy_pass http://discord-mcp:3008/;
    }

    # Fetch MCP Server
    location /fetch/ {
        proxy_pass http://fetch-mcp:3009/;
    }

    # Inspector MCP Server
    location /inspector/ {
        proxy_pass http://inspector-mcp:3010/;
    }

    # Sequential Thinking MCP Server
    location /sequential-thinking/ {
        proxy_pass http://sequential-thinking-mcp:3011/;
    }

    # Puppeteer MCP Server
    location /puppeteer/ {
        proxy_pass http://puppeteer-mcp:3012/;
    }

    # 3D Printer MCP Server
    location /3d-printer/ {
        proxy_pass http://3d-printer-mcp:3013/;
    }

    # Desktop Commander MCP Server
    location /desktop-commander/ {
        proxy_pass http://desktop-commander-mcp:3014/;
    }

    # Ollama MCP Bridge
    location /ollama/ {
        proxy_pass http://ollama-mcp-bridge:3015/;
    }

    # PostgreSQL MCP Server
    location /postgresql/ {
        proxy_pass http://postgresql:3016/;
    }

    # Elasticsearch MCP Server
    location /elasticsearch/ {
        proxy_pass http://elasticsearch:3017/;
    }

    # SQLite MCP Server
    location /sqlite/ {
        proxy_pass http://sqlite:3018/;
    }

    # Gesundheitscheck
    location /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "OK";
    }
}

# MCP Inspector UI
server {
    listen 80;
    server_name inspector.ecospherenet.work;

    # MCP Inspector UI
    location / {
        proxy_pass http://mcp-inspector-ui:6274;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # MCP Inspector Proxy Server
    location /proxy/ {
        proxy_pass http://mcp-inspector-ui:6277/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Gesundheitscheck
    location /health {
        proxy_pass http://mcp-inspector-ui:6274/health;
        access_log off;
        add_header Content-Type text/plain;
    }
}

# Standardserver f√ºr alle anderen Anfragen
server {
    listen 80 default_server;
    server_name _;

    location / {
        return 404;
    }
}