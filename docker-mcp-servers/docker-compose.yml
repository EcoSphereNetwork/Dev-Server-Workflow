version: '3.8'

networks:
  mcp-network:
    driver: bridge

volumes:
  redis_data:
  filesystem_data:
  basic_memory_data:
  wikipedia_data:

services:
  # Redis for caching and communication
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Filesystem MCP Server
  filesystem-mcp:
    image: mcp/filesystem:latest
    container_name: mcp-filesystem
    restart: always
    environment:
      - MCP_PORT=3001
      - ALLOWED_PATHS=/workspace
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - ${WORKSPACE_PATH:-/workspace}:/workspace:rw
      - filesystem_data:/data
    networks:
      - mcp-network
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - FOWNER
      - SETGID
      - SETUID
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Desktop Commander MCP Server
  desktop-commander-mcp:
    image: mcp/desktop-commander:latest
    container_name: mcp-desktop-commander
    restart: always
    environment:
      - MCP_PORT=3002
      - DISPLAY=${DISPLAY}
      - LOG_LEVEL=info
      - ALLOWED_DIRECTORIES=["/workspace"]
      - BLOCKED_COMMANDS=["rm -rf /", "sudo", "su"]
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      # Restricted access to specific directories
      - ${WORKSPACE_PATH:-/workspace}:/workspace:rw
      # X11 socket for GUI applications
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    networks:
      - mcp-network
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - FOWNER
      - SETGID
      - SETUID
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sequential Thinking MCP Server
  sequential-thinking-mcp:
    image: mcp/sequentialthinking:latest
    container_name: mcp-sequential-thinking
    restart: always
    environment:
      - MCP_PORT=3003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GitHub Chat MCP Server
  github-chat-mcp:
    image: mcp/github-chat:latest
    container_name: mcp-github-chat
    restart: always
    environment:
      - MCP_PORT=3004
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GitHub MCP Server
  github-mcp:
    image: mcp/github:latest
    container_name: mcp-github
    restart: always
    environment:
      - MCP_PORT=3005
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Puppeteer MCP Server
  puppeteer-mcp:
    image: mcp/puppeteer:latest
    container_name: mcp-puppeteer
    restart: always
    environment:
      - MCP_PORT=3006
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Basic Memory MCP Server
  basic-memory-mcp:
    image: mcp/basic-memory:latest
    container_name: mcp-basic-memory
    restart: always
    environment:
      - MCP_PORT=3007
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - basic_memory_data:/data
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Wikipedia MCP Server
  wikipedia-mcp:
    image: mcp/wikipedia-mcp:latest
    container_name: mcp-wikipedia
    restart: always
    environment:
      - MCP_PORT=3008
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      - wikipedia_data:/data
    networks:
      - mcp-network
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3