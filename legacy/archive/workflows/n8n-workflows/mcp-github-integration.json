{
  "name": "MCP-GitHub-Integration",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "mcp-github-integration",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "id": "mcp-github-webhook"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.action_type }}",
              "operation": "regex",
              "value2": "^(issue|pr|repo)_.*$"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300],
      "id": "check-action-type"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.action_type }}",
              "operation": "startsWith",
              "value2": "issue_"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 1,
      "position": [680, 200],
      "id": "route-by-action"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "issue",
        "owner": "={{ $json.repo_owner || $env.GITHUB_DEFAULT_OWNER }}",
        "repository": "={{ $json.repo_name || $env.GITHUB_DEFAULT_REPO }}",
        "title": "={{ $json.title }}",
        "body": "={{ $json.description + '\\n\\nCreated by MCP Server: ' + $json.server_name + '\\nSource ID: ' + $json.source_id + '\\nTimestamp: ' + $json.timestamp }}",
        "labels": "={{ $json.labels || ['mcp-server', $json.server_name, $json.severity || 'info'] }}",
        "assignees": "={{ $json.assignees || [] }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [900, 100],
      "id": "create-github-issue"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "issue",
        "owner": "={{ $json.repo_owner || $env.GITHUB_DEFAULT_OWNER }}",
        "repository": "={{ $json.repo_name || $env.GITHUB_DEFAULT_REPO }}",
        "issueNumber": "={{ $json.issue_number }}",
        "title": "={{ $json.title }}",
        "body": "={{ $json.description + '\\n\\nUpdated by MCP Server: ' + $json.server_name + '\\nSource ID: ' + $json.source_id + '\\nTimestamp: ' + $json.timestamp }}",
        "labels": "={{ $json.labels || ['mcp-server', $json.server_name, $json.severity || 'info'] }}",
        "assignees": "={{ $json.assignees || [] }}",
        "state": "={{ $json.state || 'open' }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [900, 300],
      "id": "update-github-issue"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "issue",
        "owner": "={{ $json.repo_owner || $env.GITHUB_DEFAULT_OWNER }}",
        "repository": "={{ $json.repo_name || $env.GITHUB_DEFAULT_REPO }}",
        "issueNumber": "={{ $json.issue_number }}",
        "body": "={{ $json.comment || 'Comment from MCP Server: ' + $json.server_name + '\\n\\n' + $json.message + '\\n\\nTimestamp: ' + $json.timestamp }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [900, 500],
      "id": "comment-on-github-issue"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "repository",
        "owner": "={{ $json.repo_owner || $env.GITHUB_DEFAULT_OWNER }}",
        "repository": "={{ $json.repo_name || $env.GITHUB_DEFAULT_REPO }}",
        "filePath": "={{ $json.file_path }}",
        "fileContent": "={{ $json.file_content }}",
        "commitMessage": "={{ $json.commit_message || 'Update from MCP Server: ' + $json.server_name }}",
        "branch": "={{ $json.branch || 'main' }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [1120, 200],
      "id": "update-github-file"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "pullRequest",
        "owner": "={{ $json.repo_owner || $env.GITHUB_DEFAULT_OWNER }}",
        "repository": "={{ $json.repo_name || $env.GITHUB_DEFAULT_REPO }}",
        "title": "={{ $json.title || 'PR from MCP Server: ' + $json.server_name }}",
        "body": "={{ $json.description + '\\n\\nCreated by MCP Server: ' + $json.server_name + '\\nSource ID: ' + $json.source_id + '\\nTimestamp: ' + $json.timestamp }}",
        "head": "={{ $json.head_branch }}",
        "base": "={{ $json.base_branch || 'main' }}",
        "draft": "={{ $json.draft || true }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [1120, 400],
      "id": "create-github-pr"
    },
    {
      "parameters": {
        "operation": "upsert",
        "databaseId": "={{ $env.APPFLOWY_DATABASE_ID }}",
        "record": "={\n  \"Title\": $json.title || 'GitHub Action: ' + $json.action_type,\n  \"Description\": $json.description || $json.message || '',\n  \"Source\": \"github_mcp\",\n  \"Server\": $json.server_name,\n  \"Source ID\": $json.source_id || $json.issue_number || $json.pr_number,\n  \"Type\": $json.action_type,\n  \"Severity\": $json.severity || 'info',\n  \"Components\": $json.components ? $json.components.join(\", \") : \"\",\n  \"Timestamp\": $json.timestamp || new Date().toISOString(),\n  \"GitHub URL\": $json.html_url || '',\n  \"Last Updated\": new Date().toISOString()\n}"
      },
      "type": "n8n-nodes-base.appflowy",
      "typeVersion": 1,
      "position": [1340, 300],
      "id": "update-appflowy-record"
    },
    {
      "parameters": {
        "channel": "={{ $env.SLACK_CHANNEL_GITHUB }}",
        "text": "=**GitHub Action**: {{ $json.action_type }}\n\n**Title**: {{ $json.title || 'N/A' }}\n**Server**: {{ $json.server_name }}\n**Repository**: {{ $json.repo_owner }}/{{ $json.repo_name }}\n\n{{ $json.description || $json.message || '' }}\n\n{{ $json.html_url ? `[View on GitHub](${$json.html_url})` : '' }}",
        "otherOptions": {
          "attachments": "=[\n  {\n    \"color\": \"{{ $json.action_type.includes('issue') ? '#FF0000' : $json.action_type.includes('pr') ? '#0000FF' : '#00FF00' }}\",\n    \"fields\": [\n      {\n        \"title\": \"Action Type\",\n        \"value\": \"{{ $json.action_type }}\",\n        \"short\": true\n      },\n      {\n        \"title\": \"Timestamp\",\n        \"value\": \"{{ $json.timestamp || new Date().toISOString() }}\",\n        \"short\": true\n      }\n    ]\n  }\n]"
        }
      },
      "type": "n8n-nodes-base.slack",
      "typeVersion": 1,
      "position": [1340, 500],
      "id": "send-slack-notification",
      "continueOnFail": true
    },
    {
      "parameters": {
        "functionCode": "// Error handling for invalid requests\nreturn {\n  error: true,\n  message: 'Invalid action type. Must be one of: issue_create, issue_update, issue_comment, pr_create, repo_update',\n  timestamp: new Date().toISOString(),\n  received_data: $json\n};"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [680, 400],
      "id": "handle-invalid-action"
    }
  ],
  "connections": {
    "mcp-github-webhook": {
      "main": [
        [
          {
            "node": "check-action-type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-action-type": {
      "main": [
        [
          {
            "node": "route-by-action",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "handle-invalid-action",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route-by-action": {
      "main": [
        [
          {
            "node": "create-github-issue",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update-github-issue",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "comment-on-github-issue",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "update-github-file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "create-github-pr",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-github-issue": {
      "main": [
        [
          {
            "node": "update-appflowy-record",
            "type": "main",
            "index": 0
          },
          {
            "node": "send-slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update-github-issue": {
      "main": [
        [
          {
            "node": "update-appflowy-record",
            "type": "main",
            "index": 0
          },
          {
            "node": "send-slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "comment-on-github-issue": {
      "main": [
        [
          {
            "node": "update-appflowy-record",
            "type": "main",
            "index": 0
          },
          {
            "node": "send-slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "update-github-file": {
      "main": [
        [
          {
            "node": "update-appflowy-record",
            "type": "main",
            "index": 0
          },
          {
            "node": "send-slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-github-pr": {
      "main": [
        [
          {
            "node": "update-appflowy-record",
            "type": "main",
            "index": 0
          },
          {
            "node": "send-slack-notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  }
}