# Befehl: sudo cat /etc/apache2/sites-enabled/* 2>/dev/null || echo 'Keine Apache-Konfigurationsdateien gefunden'
# Ausgeführt am: Fr 9. Mai 13:58:47 CEST 2025
# ------------------------------
<VirtualHost *:80>
	# The ServerName directive sets the request scheme, hostname and port that
	# the server uses to identify itself. This is used when creating
	# redirection URLs. In the context of virtual hosts, the ServerName
	# specifies what hostname must appear in the request's Host: header to
	# match this virtual host. For the default virtual host (this file) this
	# value is not decisive as it is used as a last resort host regardless.
	# However, you must set it for any further virtual host explicitly.
	#ServerName www.example.com

	ServerAdmin webmaster@localhost
	DocumentRoot /var/www/html

	# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
	# error, crit, alert, emerg.
	# It is also possible to configure the loglevel for particular
	# modules, e.g.
	#LogLevel info ssl:warn

	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

	# For most configuration files from conf-available/, which are
	# enabled or disabled at a global level, it is possible to
	# include a line for only one particular virtual host. For example the
	# following line enables the CGI configuration for this host only
	# after it has been globally disabled with "a2disconf".
	#Include conf-available/serve-cgi-bin.conf
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
<VirtualHost *:80>
    ServerName affine.ecospherenet.work
    
    # Weiterleitung von HTTP auf HTTPS
    RewriteEngine On
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
RewriteCond %{SERVER_NAME} =affine.ecospherenet.work
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName affine.ecospherenet.work
    
    # Wenn du kein SSL-Zertifikat für affine.ecospherenet.work hast,
    # kannst du hier die gleichen Zertifikate wie für gitlab verwenden
    # oder ein neues mit certbot erstellen
    SSLEngine on
    Include /etc/letsencrypt/options-ssl-apache.conf
    
    ProxyPreserveHost On
    
    # Direkte Weiterleitung zum AFFiNE-Container
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/
    
    # RequestHeader Einstellungen für eine sichere Verbindung
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Ssl "on"
    
    ErrorLog ${APACHE_LOG_DIR}/affine_error.log
    CustomLog ${APACHE_LOG_DIR}/affine_access.log combined
    SSLCertificateFile /etc/letsencrypt/live/affine.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/affine.ecospherenet.work/privkey.pem
</VirtualHost>
</IfModule>
<VirtualHost *:80>
    ServerName appflowy.ecospherenet.work
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:9090/
    ProxyPassReverse / http://127.0.0.1:9090/
    
    # Erzwinge IPv4
#    AddressFamily inet
</VirtualHost>
<VirtualHost *:80>
    ServerName gitlab.ecospherenet.work
    RewriteEngine On
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName gitlab.ecospherenet.work

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/gitlab.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/gitlab.ecospherenet.work/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/

    RequestHeader set X-Forwarded-Proto https
    RequestHeader set X-Forwarded-Ssl on
</VirtualHost>
</IfModule>
<VirtualHost *:80>
    ServerName gitlab.ecospherenet.work
    RewriteEngine On
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName gitlab.ecospherenet.work

    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/gitlab.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/gitlab.ecospherenet.work/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf

    # Aktualisiert auf Port 8282 (statt 8080)
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8282/
    ProxyPassReverse / http://127.0.0.1:8282/

    # Diese Header sind wichtig
    RequestHeader set X-Forwarded-Proto https
    RequestHeader set X-Forwarded-Ssl on
    RequestHeader set X-Forwarded-Host gitlab.ecospherenet.work
    RequestHeader set X-Forwarded-Port 443
    
    # WebSocket für Kubernetes-Agent und andere Funktionen
    ProxyRequests Off
    ProxyVia Off
    
    # WebSocket-Support für Terminal und KAS
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} =websocket [NC]
    RewriteRule /(.*)  ws://127.0.0.1:8282/$1 [P,L]
</VirtualHost>
</IfModule>
<VirtualHost *:80>
    ServerName gitlab.ecospherenet.work
    RewriteEngine On
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<IfModule mod_ssl.c>
<VirtualHost *:443>
    ServerName gitlab.ecospherenet.work
    
    # TLS-Konfiguration
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/gitlab.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/gitlab.ecospherenet.work/privkey.pem
    Include /etc/letsencrypt/options-ssl-apache.conf
    
    # Proxy-Konfiguration
    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8282/
    ProxyPassReverse / http://127.0.0.1:8282/
    
    # WebSocket-Unterstützung
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} =websocket [NC]
    RewriteRule /(.*)  ws://127.0.0.1:8282/$1 [P,L]
    
    # Header
    RequestHeader set X-Forwarded-Proto https
    RequestHeader set X-Forwarded-Ssl on
    RequestHeader set X-Forwarded-Host gitlab.ecospherenet.work
    RequestHeader set X-Forwarded-Port 443
    
    # Proxy-Einstellungen
    ProxyRequests Off
    ProxyVia Off
    
    # Timeouts erhöhen
    ProxyTimeout 300
    Timeout 300
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/gitlab_error.log
    CustomLog ${APACHE_LOG_DIR}/gitlab_access.log combined
</VirtualHost>
</IfModule>
<VirtualHost *:80>
    ServerName gitlab.ecospherenet.work
    
    # Redirect all HTTP traffic to HTTPS except Let's Encrypt challenges
    RewriteEngine On
    RewriteCond %{REQUEST_URI} !^/\.well-known/acme-challenge/
    RewriteRule ^(.*)$ https://%{HTTP_HOST}$1 [R=301,L]
    
    # Let's Encrypt ACME challenge directory
    DocumentRoot /var/www/letsencrypt
    
    <Directory /var/www/letsencrypt>
        Options None
        AllowOverride None
        Require all granted
    </Directory>
    
    # Logdateien
    ErrorLog ${APACHE_LOG_DIR}/gitlab_http_error.log
    CustomLog ${APACHE_LOG_DIR}/gitlab_http_access.log combined
</VirtualHost>
<VirtualHost *:80>
    ServerName gitlab.ecospherenet.work

    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
RewriteCond %{SERVER_NAME} =gitlab.ecospherenet.work
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<VirtualHost *:443>
    ServerName gitlab.ecospherenet.work

#    SSLEngine on
#    SSLCertificateFile /etc/letsencrypt/live/gitlab.ecospherenet.work/fullchain.pem
#    SSLCertificateKeyFile /etc/letsencrypt/live/gitlab.ecospherenet.work/privkey.pem
#    Include /etc/letsencrypt/options-ssl-apache.conf

    ProxyPreserveHost On
    ProxyPass / http://127.0.0.1:8929/
    ProxyPassReverse / http://127.0.0.1:8929/

    ErrorLog ${APACHE_LOG_DIR}/gitlab_error.log
    CustomLog ${APACHE_LOG_DIR}/gitlab_access.log combined
SSLCertificateFile /etc/letsencrypt/live/gitlab.ecospherenet.work/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/gitlab.ecospherenet.work/privkey.pem
Include /etc/letsencrypt/options-ssl-apache.conf
</VirtualHost>
<VirtualHost *:80>
    ServerName n8n.ecospherenet.work
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    RewriteCond %{SERVER_NAME} =n8n.ecospherenet.work
    RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>

<VirtualHost *:443>
    ServerName n8n.ecospherenet.work
    ServerAdmin webmaster@ecospherenet.work
    
    # ProxyConfiguration
    ProxyRequests Off
    ProxyPreserveHost On
    
    # Proxy Pass Settings
    ProxyPass / http://localhost:5670/
    ProxyPassReverse / http://localhost:5670/
    
    # Verbesserte WebSocket Support Konfiguration
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} websocket [NC]
    RewriteCond %{HTTP:Connection} upgrade [NC]
    RewriteRule ^/?(.*) ws://localhost:5670/$1 [P,L]
    
    # Additional Headers
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"
    
    # Security Headers
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-Content-Type-Options "nosniff"
    
    # Logging
    LogLevel debug proxy:trace8
    ErrorLog ${APACHE_LOG_DIR}/n8n_error.log
    CustomLog ${APACHE_LOG_DIR}/n8n_access.log combined
    
    # SSL Konfiguration (wird von Certbot verwaltet)
    SSLEngine on
    Include /etc/letsencrypt/options-ssl-apache.conf
    SSLCertificateFile /etc/letsencrypt/live/n8n.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/n8n.ecospherenet.work/privkey.pem
</VirtualHost>
<VirtualHost *:80>
    ServerName n8n.localhost
    ServerAlias n8n

    RewriteEngine On
    RewriteRule ^/?(.*) http://localhost:5670/$1 [P,L]
    
    ProxyPreserveHost Off
    ProxyPass / http://localhost:5670/
    ProxyPassReverse / http://localhost:5670/
</VirtualHost>
<VirtualHost *:80>
  ServerName openproject.ecospherenet.work

  RewriteEngine On
  RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,L]
RewriteCond %{SERVER_NAME} =openproject.ecospherenet.work
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
</VirtualHost>
<IfModule mod_ssl.c>
<VirtualHost *:443>
  ServerName openproject.ecospherenet.work

  RewriteEngine On
# Some rewrite rules in this file were disabled on your HTTPS site,
# because they have the potential to create redirection loops.

#   RewriteRule ^/?(.*) https://%{SERVER_NAME}/$1 [R=301,L]
# RewriteCond %{SERVER_NAME} =openproject.ecospherenet.work
# RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [END,NE,R=permanent]
RequestHeader set X-Forwarded-Proto "https"
ProxyPreserveHost On
ProxyPass / http://127.0.0.1:6000/
ProxyPassReverse / http://127.0.0.1:6000/

ErrorLog ${APACHE_LOG_DIR}/openproject_error.log
CustomLog ${APACHE_LOG_DIR}/openproject_access.log combined

SSLCertificateFile /etc/letsencrypt/live/openproject.ecospherenet.work/fullchain.pem
SSLCertificateKeyFile /etc/letsencrypt/live/openproject.ecospherenet.work/privkey.pem
Include /etc/letsencrypt/options-ssl-apache.conf
</VirtualHost>
</IfModule>
<VirtualHost *:8443>
    ServerName n8n.ecospherenet.work
    DocumentRoot /var/www/html
    
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/n8n.ecospherenet.work/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/n8n.ecospherenet.work/privkey.pem
</VirtualHost>
