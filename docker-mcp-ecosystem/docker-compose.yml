version: '3.8'

networks:
  mcp-network:
    driver: bridge
  n8n-network:
    driver: bridge

volumes:
  redis_data:
  filesystem_data:
  basic_memory_data:
  wikipedia_data:
  n8n_data:
  postgres_data:
  ollama_data:

services:
  # Redis for caching and communication
  redis:
    image: redis:7-alpine
    container_name: mcp-redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password} --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - mcp-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 768M
        reservations:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Filesystem MCP Server
  filesystem-mcp:
    image: mcp/filesystem:latest
    container_name: mcp-filesystem
    restart: always
    environment:
      - MCP_PORT=3001
      - ALLOWED_PATHS=/workspace
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
    volumes:
      - ${WORKSPACE_PATH:-/workspace}:/workspace:rw
      - filesystem_data:/data
    ports:
      - "3001:3001"
    networks:
      - mcp-network
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - FOWNER
      - SETGID
      - SETUID
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Desktop Commander MCP Server
  desktop-commander-mcp:
    image: mcp/desktop-commander:latest
    container_name: mcp-desktop-commander
    restart: always
    environment:
      - MCP_PORT=3002
      - DISPLAY=${DISPLAY}
      - LOG_LEVEL=info
      - ALLOWED_DIRECTORIES=["/workspace"]
      - BLOCKED_COMMANDS=["rm -rf /", "sudo", "su", "dd", "mkfs", "format", "fdisk", "shutdown", "reboot", "halt", "poweroff"]
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
    volumes:
      # Restricted access to specific directories
      - ${WORKSPACE_PATH:-/workspace}:/workspace:rw
      # X11 socket for GUI applications
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
    ports:
      - "3002:3002"
    networks:
      - mcp-network
    depends_on:
      - redis
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - FOWNER
      - SETGID
      - SETUID
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Sequential Thinking MCP Server
  sequential-thinking-mcp:
    image: mcp/sequentialthinking:latest
    container_name: mcp-sequential-thinking
    restart: always
    environment:
      - MCP_PORT=3003
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - MAX_THINKING_STEPS=10
      - THINKING_TIMEOUT=60
    ports:
      - "3003:3003"
    networks:
      - mcp-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GitHub Chat MCP Server
  github-chat-mcp:
    image: mcp/github-chat:latest
    container_name: mcp-github-chat
    restart: always
    environment:
      - MCP_PORT=3004
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=60
      - RATE_LIMIT_PERIOD=60
    ports:
      - "3004:3004"
    networks:
      - mcp-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # GitHub MCP Server
  github-mcp:
    image: mcp/github:latest
    container_name: mcp-github
    restart: always
    environment:
      - MCP_PORT=3005
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - CACHE_ENABLED=true
      - CACHE_TTL=3600
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=60
      - RATE_LIMIT_PERIOD=60
      - ALLOWED_REPOS=EcoSphereNetwork/*
    ports:
      - "3005:3005"
    networks:
      - mcp-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Puppeteer MCP Server
  puppeteer-mcp:
    image: mcp/puppeteer:latest
    container_name: mcp-puppeteer
    restart: always
    environment:
      - MCP_PORT=3006
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
      - PUPPETEER_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-gpu,--disable-extensions
      - MAX_CONCURRENT_BROWSERS=5
      - BROWSER_TIMEOUT=60000
      - ALLOWED_DOMAINS=github.com,gitlab.com,openproject.org,wikipedia.org
    ports:
      - "3006:3006"
    networks:
      - mcp-network
    depends_on:
      - redis
    security_opt:
      - seccomp=unconfined
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3006/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Basic Memory MCP Server
  basic-memory-mcp:
    image: mcp/basic-memory:latest
    container_name: mcp-basic-memory
    restart: always
    environment:
      - MCP_PORT=3007
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - STORAGE_TYPE=redis
      - MAX_MEMORY_SIZE=100MB
      - MEMORY_EXPIRATION=86400
    volumes:
      - basic_memory_data:/data
    ports:
      - "3007:3007"
    networks:
      - mcp-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3007/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Wikipedia MCP Server
  wikipedia-mcp:
    image: mcp/wikipedia-mcp:latest
    container_name: mcp-wikipedia
    restart: always
    environment:
      - MCP_PORT=3008
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-redis_password}
      - LOG_LEVEL=info
      - CACHE_ENABLED=true
      - CACHE_TTL=86400
      - DEFAULT_LANGUAGE=en
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_REQUESTS=30
      - RATE_LIMIT_PERIOD=60
      - MAX_SEARCH_RESULTS=10
    volumes:
      - wikipedia_data:/data
    ports:
      - "3008:3008"
    networks:
      - mcp-network
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  # MCP Inspector UI
  mcp-inspector:
    image: mcp/inspector:latest
    container_name: mcp-inspector
    restart: always
    environment:
      - PORT=8080
      - MCP_SERVERS=filesystem-mcp:3001,desktop-commander-mcp:3002,sequential-thinking-mcp:3003,github-chat-mcp:3004,github-mcp:3005,puppeteer-mcp:3006,basic-memory-mcp:3007,wikipedia-mcp:3008,ollama-mcp-bridge:8000
      - LOG_LEVEL=info
      - REFRESH_INTERVAL=30
    ports:
      - "8080:8080"
    networks:
      - mcp-network
    depends_on:
      - filesystem-mcp
      - desktop-commander-mcp
      - sequential-thinking-mcp
      - github-chat-mcp
      - github-mcp
      - puppeteer-mcp
      - basic-memory-mcp
      - wikipedia-mcp
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      
  # Ollama LLM Server
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    deploy:
      resources:
        limits:
          memory: 8G
        reservations:
          memory: 4G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mcp-network

  # Ollama MCP Bridge
  ollama-mcp-bridge:
    build:
      context: ./ollama-mcp-bridge
      dockerfile: Dockerfile
    container_name: ollama-mcp-bridge
    restart: unless-stopped
    depends_on:
      - ollama
      - redis
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - OLLAMA_MODEL=${OLLAMA_MODEL:-qwen2.5-coder:7b-instruct}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - BRAVE_API_KEY=${BRAVE_API_KEY}
      - LOG_LEVEL=info
      - PORT=8000
    volumes:
      - ./ollama-mcp-bridge/bridge_config.json:/app/bridge_config.json
      - ./ollama-mcp-bridge/logs:/app/logs
    ports:
      - "8000:8000"
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL for n8n
  postgres:
    image: postgres:14-alpine
    container_name: n8n-postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-n8n}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # n8n workflow automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: always
    environment:
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - N8N_HOST=n8n
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD:-n8n}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY:-n8n-encryption-key}
      - WEBHOOK_URL=http://localhost:5678/
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_MODE=regular
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE:-UTC}
      - MCP_SERVERS_CONFIG={"servers":[{"name":"filesystem","url":"http://filesystem-mcp:3001","type":"filesystem"},{"name":"desktop-commander","url":"http://desktop-commander-mcp:3002","type":"desktop"},{"name":"sequential-thinking","url":"http://sequential-thinking-mcp:3003","type":"thinking"},{"name":"github-chat","url":"http://github-chat-mcp:3004","type":"github"},{"name":"github","url":"http://github-mcp:3005","type":"github"},{"name":"puppeteer","url":"http://puppeteer-mcp:3006","type":"browser"},{"name":"basic-memory","url":"http://basic-memory-mcp:3007","type":"memory"},{"name":"wikipedia","url":"http://wikipedia-mcp:3008","type":"knowledge"}]}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_DEFAULT_OWNER=${GITHUB_DEFAULT_OWNER:-EcoSphereNetwork}
      - GITHUB_DEFAULT_REPO=${GITHUB_DEFAULT_REPO:-Dev-Server-Workflow}
      - SLACK_CHANNEL_ALERTS=${SLACK_CHANNEL_ALERTS:-mcp-alerts}
      - SLACK_CHANNEL_GITHUB=${SLACK_CHANNEL_GITHUB:-github-updates}
      - APPFLOWY_DATABASE_ID=${APPFLOWY_DATABASE_ID:-your-appflowy-db-id}
      - APPFLOWY_DATABASE_ID_ANALYSIS=${APPFLOWY_DATABASE_ID_ANALYSIS:-your-appflowy-analysis-db-id}
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ${WORKSPACE_PATH:-/workspace}:/workspace:rw
    networks:
      - n8n-network
      - mcp-network
    depends_on:
      - postgres
      - redis
      - filesystem-mcp
      - desktop-commander-mcp
      - sequential-thinking-mcp
      - github-chat-mcp
      - github-mcp
      - puppeteer-mcp
      - basic-memory-mcp
      - wikipedia-mcp
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3