version: '3.8'

services:
  dev-server-ui:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80"
    networks:
      - dev-server-network
    depends_on:
      - nginx

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/ssl:/etc/nginx/ssl
    networks:
      - dev-server-network

  monitoring:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - dev-server-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false

  prometheus:
    image: prom/prometheus:latest
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - dev-server-network

  alertmanager:
    image: prom/alertmanager:latest
    restart: always
    ports:
      - "9093:9093"
    volumes:
      - ./docker/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
    networks:
      - dev-server-network

  portainer:
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - dev-server-network

  mcp-manager:
    build:
      context: ./docker/mcp-server
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3001:3000"
    volumes:
      - mcp-data:/app/data
    networks:
      - dev-server-network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    ports:
      - "8081:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - DB_VENDOR=h2
    command:
      - start-dev
    networks:
      - dev-server-network

  api-docs:
    image: swaggerapi/swagger-ui:latest
    restart: always
    ports:
      - "8082:8080"
    environment:
      - SWAGGER_JSON=/api/openapi.json
    volumes:
      - ./docker/api-docs:/api
    networks:
      - dev-server-network

networks:
  dev-server-network:
    driver: bridge

volumes:
  grafana-data:
  prometheus-data:
  portainer-data:
  mcp-data: