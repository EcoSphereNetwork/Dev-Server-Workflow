{
  "name": "OpenHands-to-GitHub",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "openhands-to-github",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "id": "openhands-to-github-webhook"
    },
    {
      "parameters": {
        "functionCode": "// Determine if this issue should go to internal or public GitHub\nconst issue = $input.item.json;\nconst mapping = $getNodeParameter('mapping.github');\n\n// Check for internal development indicators in labels or description\nconst isInternal = issue.labels?.some(label => \n  ['internal', 'private', 'development'].includes(label.toLowerCase())\n) || \n  issue.description?.toLowerCase().includes('#internal') ||\n  issue.description?.toLowerCase().includes('#private');\n\n// Set target GitHub location\nif (isInternal) {\n  // Use internal GitHub\n  return [{\n    json: {\n      ...issue,\n      github_target: 'internal',\n      github_owner: mapping.internal.owner,\n      github_org: mapping.internal.organization,\n      // Select a repository based on issue content or labels\n      github_repo: selectRepository(issue, mapping.internal.repositories)\n    }\n  }];\n} else {\n  // Use public GitHub\n  return [{\n    json: {\n      ...issue,\n      github_target: 'public',\n      github_owner: mapping.public.owner,\n      github_org: mapping.public.organization,\n      // Select a repository based on issue content or labels\n      github_repo: selectRepository(issue, mapping.public.repositories)\n    }\n  }];\n}\n\n// Helper function to select the most appropriate repository\nfunction selectRepository(issue, repositories) {\n  // Simple implementation - can be enhanced with more sophisticated matching\n  for (const label of (issue.labels || [])) {\n    for (const repo of repositories) {\n      if (label.toLowerCase().includes(repo.toLowerCase())) {\n        return repo;\n      }\n    }\n  }\n  \n  // Default to first repository if no match found\n  return repositories[0];\n}"
      },
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [460, 300],
      "id": "route-to-github-target"
    },
    {
      "parameters": {
        "resource": "issue",
        "owner": "={{ $json.github_owner }}",
        "repository": "={{ $json.github_repo }}",
        "title": "={{ $json.title }}",
        "body": "={{ $json.description + '\\n\\nSource: OpenHands\\nInstance: ' + $json.instance_name + '\\nOriginal URL: ' + $json.url }}"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1,
      "position": [680, 300],
      "id": "create-github-issue"
    },
    {
      "parameters": {
        "resource": "Work Packages",
        "operation": "List Work Packages",
        "filters": {
          "fields": [
            {
              "name": "customField1",
              "value": "openhands"
            },
            {
              "name": "customField2",
              "value": "={{ $json.source_id }}"
            },
            {
              "name": "customField3",
              "value": "={{ $json.instance_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.openProject",
      "typeVersion": 1,
      "position": [680, 500],
      "id": "find-openproject-workpackage"
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json._embedded ? $json._embedded.elements.length : 0 }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [900, 500],
      "id": "check-openproject-exists"
    },
    {
      "parameters": {
        "resource": "Work Packages",
        "operation": "Update Work Package",
        "id": "={{ $json._embedded.elements[0].id }}",
        "description": "={{ $json._embedded.elements[0].description.raw + '\\n\\nLinked to GitHub issue: ' + $json.github_target + '/' + $json.github_owner + '/' + $json.github_repo + '/issues/' + $json.number }}",
        "additionalFields": {
          "customField4": "={{ $json.github_target }}",
          "customField5": "={{ $json.github_repo }}",
          "customField6": "={{ $json.number }}"
        }
      },
      "type": "n8n-nodes-base.openProject",
      "typeVersion": 1,
      "position": [1120, 400],
      "id": "update-openproject-with-github"
    },
    {
      "parameters": {
        "url": "={{ $json.instance_url }}/api/issues/{{ $json.source_id }}/link",
        "method": "POST",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "httpHeaderAuth": {
          "name": "Authorization",
          "value": "=Bearer {{ $getNodeParameter('instances').find(i => i.id === $json.instance_id).apiKey }}"
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"link_type\": \"github_issue\",\n  \"url\": \"https://github.com/\" + $json.github_owner + \"/\" + $json.github_repo + \"/issues/\" + $json.number,\n  \"title\": \"GitHub Issue #\" + $json.number,\n  \"description\": \"Linked to GitHub issue in the \" + $json.github_target + \" repository\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [900, 300],
      "id": "update-openhands-with-github-link"
    }
  ],
  "connections": {
    "openhands-to-github-webhook": {
      "main": [
        [
          {
            "node": "route-to-github-target",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "route-to-github-target": {
      "main": [
        [
          {
            "node": "create-github-issue",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "create-github-issue": {
      "main": [
        [
          {
            "node": "update-openhands-with-github-link",
            "type": "main",
            "index": 0
          },
          {
            "node": "find-openproject-workpackage",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "find-openproject-workpackage": {
      "main": [
        [
          {
            "node": "check-openproject-exists",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "check-openproject-exists": {
      "main": [
        [
          {
            "node": "update-openproject-with-github",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  }
}
